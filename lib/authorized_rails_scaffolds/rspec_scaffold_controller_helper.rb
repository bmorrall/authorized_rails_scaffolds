class AuthorizedRailsScaffolds::RSpecScaffoldControllerHelper < AuthorizedRailsScaffolds::RSpecScaffoldHelper
  include ControllerMacros

  def initialize(options = {})
    super options

    # Modularized class name generated by spec generator
    @controller_class_name = options[:controller_class_name]
  end

  def create_resource_from_factory
    extra_factory_params = build_extra_factory_params
    "FactoryGirl.create(:#{var_name}#{extra_factory_params})"
  end

  def create_parent_resource_from_factory(model_name)
    extra_factory_params = build_extra_factory_params(model_name)
    "FactoryGirl.create(:#{model_name}#{extra_factory_params})"
  end

  protected

  def build_extra_factory_params(model_name = nil)
    if model_name.nil?
      attribute = parent_model_tables.last
    else
      parent_index = parent_model_tables.index(model_name.to_s)
      unless parent_index.nil? || parent_index == 0
        attribute = parent_model_tables[parent_index - 1]
      end
    end

    if attribute.nil?
      return ''
    else
      return ", :#{attribute} => @#{attribute}"
    end
  end

end